<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>4</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>608</x>
      <y>180</y>
      <w>124</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>*GLuint*
--
-displayList: lotsOfCompiledGLInstructions
--
+ glCallList(gluint) : void /*calls 
    the instructions in the list*/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>456</x>
      <y>156</y>
      <w>576</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>namespace GraphicsEngine
--
bg=#f0d0d0
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>688</x>
      <y>0</y>
      <w>136</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>*Vector3f*
--
+att_x: float
+att_y: float
+att_z: float
--
+Vector3f(float, float, float): Vector3f
+Vector3f(Vector3f) : Vector3f
--
+dotProduct(Vector3f): float
+crossProduct(Vector3f): Vector3f
+length(): float
+normalize() : void
+operator=(const Vector3f): Vector3f
+operator+(const Vector3f): Vector
+operator-(const Vector3f): Vector
+operator*(const float): Vector
+operator/(const float): Vector
+operator+=(const Vector3f): Vector
+operator-=(const Vector3f): Vector
+operato*=(const float): Vector
+operator/=(const float): Vector
+operator==(const Vector3f): bool
+operator!=(const Vector3f): bool
+operator&lt;&lt;(ostream, const Vector3f): ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>732</x>
      <y>148</y>
      <w>20</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
layer=-1</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>812</x>
      <y>192</y>
      <w>96</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>/*Item*/
--
-outerLook: GLuint
-rotation: Vector3f
--
Item(GLuint, Vector3f): Item
Item(Item*): Item
--
/+draw(Vector3f): void/
/+update(bool): bool/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>728</x>
      <y>180</y>
      <w>92</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>912</x>
      <y>244</y>
      <w>112</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>/*Weapon*/
--
-frames: vector&lt;GLuint&gt;
-normalAnimation: unsigned int
-attackAnimation: unsigned int
-secondaryAnimation: unsigned int
-currentFrame: unsigned int
--
Weapon(vector&lt;GLuint&gt;, unsigned int, 
unsigned int, unsigned int): Weapon
Weapon(Weapon*): Weapon
--
/+draw(bool): void/
/+draw(Vector3f): void/
+update(bool): bool
/+attack() : void/
/+reload() : void/
/+secondary() : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>940</x>
      <y>396</y>
      <w>84</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>*Gun*
--
-aimPosition: Vector3f
-curPosition: Vector3f
-aimRotation: Vector3f
-curRotation: Vector3f
-isAiming: bool
--
Gun(vector&lt;GLuint&gt;, 
Vector3f, Vector3f): Gun
--
+attack(): void
+secondary(): void
+reload(): void
+draw(Vector3f): void
+draw(bool): void
+update(bool): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>904</x>
      <y>224</y>
      <w>76</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>976</x>
      <y>348</y>
      <w>12</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>808</x>
      <y>260</y>
      <w>100</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>*PowerUp*
--
-activationLook: vector&lt;GLuint&gt;
-currentFrame: unsigned int
--
PowerUp(vector&lt;GLuint&gt;, Vector3f, 
unsigned int): PowerUp
PowerUp(PowerUp*): PowerUp
--
+draw(Vector3f): void
+update(bool): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>868</x>
      <y>244</y>
      <w>12</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>296</y>
      <w>148</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>*Level*
--
-setup: vector&lt;GLuint&gt;
-particules: vector&lt;Particule *&gt;
-curParticules: vector&lt;Particule *&gt;
--
Level(vector&lt;GLuint&gt;, vector&lt;Particule*&gt;): Level
--
+draw(): void
+spawnParticules(unsigned int, Vector3f, int): void
+update(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>604</x>
      <y>212</y>
      <w>12</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>812</x>
      <y>364</y>
      <w>124</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>*Camera*
--
-pitch: float
-yaw: float
-roll: float
-mouseSpeed : float
-isMouseIn: bool
-isMoving: bool
-jumpPos: vector&lt;float&gt;
-currentJump: unsigned int
--
-lockCamera(): void
-moveCamera(Vector3f, float, float): void
-moveCameraUp(Vector3f, float, float): void
-handleMoves(Vector3f, float): void
+control(Vector3f, int, int,
    bool, float, float): bool
+updateCamera(Vector3f): void
+lookAt(float, float): void
+getPitch(); float
+getYaw(): float
+getsight: Vector3f
+isMouseIn(): bool&amp;
+isMoving(): bool
+jump(): void
+doesJump(Vector3f): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>692</x>
      <y>460</y>
      <w>92</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
-frames: vector&lt;GLuint&gt;
-walkAnimation: unsigned int
-attackAnimation: unsigned int
-deathAnimation: unsigned int
-currentFrame: unsigned int
doesAttack: bool
doesDie: bool
--
+draw(Vector3f, Vector3f): void
+update(): bool
+die(): void
+attack(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>700</x>
      <y>220</y>
      <w>92</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>*Board*
--
-gravity: float
-weaponNumber: unsigned int
-displayMode: SDL_DisplayMode
-context: SDL_GLContext
-particules: vector &lt;Particule*&gt;
+fps: int
+currentLevel: unsigned int
+window: SDL_window*
-ennemies: vector&lt;Ennemy *&gt;
-items: vector&lt;Item *&gt;
-itemDisplayed: vector&lt;Item*&gt;
-levels: vector&lt;Level *&gt;
--
-readAllFromFile(ifstream): void
+draw(Vector3f): void
+spawnEnnemy(): void
+spawnItem(unsigned int): void
+changeLevel(unsigned int): void
+drawUI(int, int, unsigned int): void
+getGravity(): float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>692</x>
      <y>212</y>
      <w>12</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;620.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>716</x>
      <y>360</y>
      <w>88</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*Player*
--
+camera: Camera
-head: float
-speed: float
-sprintSpeed: float
--
+update(Vector3f, int, int, 
    bool, bool,float): bool
+draw(Weapon *): void
+attack(Weapon *): void
+secondary(Weapon *): void
+reload(Weapon *): void
+jump(): void
+giveSpeed(): float
giveSprintSpeed(): float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>388</y>
      <w>20</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>708</x>
      <y>352</y>
      <w>12</w>
      <h>116</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;270.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>736</x>
      <y>352</y>
      <w>12</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>216</y>
      <w>60</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>130.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1048</x>
      <y>208</y>
      <w>500</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>namespace PhysicsEngine
--
bg=#d0f0d0
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>184</y>
      <w>452</w>
      <h>384</h>
    </coordinates>
    <panel_attributes>namespace GameEngine
--
bg=#d0d0f0
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>820</x>
      <y>68</y>
      <w>508</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;1250.0;370.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1072</x>
      <y>332</y>
      <w>224</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>*Collision*
--
-weight: float (in future updates?)
--
+static rayPlane(CollisionQuad quad, Vector3f origin,
    Vector3f direction, float *distance, Vector3f *collisionPoint): bool
-static triangleArea(Vector3f point1, Vector3f point2, Vector3f point3): float
+static sphereQuad(CollisionSphere &amp;character, collisionQuad quad): bool
+static raySphere(CollisionSphere sphere, Vector3f origin,
    Vector3f direction, float *distance, Vector3f *collisionPoint): bool
+static sphereSphere(CollisionSphere &amp;character, CollisionSphere other): bool
+static rayBox(CollisionBox box, Vector3f origin, Vector3f direction,
    float *distance, Vector3f *collisionPoint): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1344</x>
      <y>440</y>
      <w>200</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>*CollisionSphere*
--
+center: Vector3f
+radius: float
--
+CollisionSphere(Vector3f center, float radius): CollisionSphere
+CollisionSphere(float x, float y, float z, float radius): CollisionSphere</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1076</x>
      <y>428</y>
      <w>188</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*CollisionQuad*
--
+corners: Vector3f[4]
+normal: Vector3f
--
+CollisionQuad(Vector3f point1, Vector3f point2, Vector3f point3, 
    Vector3f point4, Vector3f normal): CollisionQuad
+CollisionQuad(float x1, float y1, float z1, 
    float x2, float y2, float z2, 
    float x3, float y3, float z3, 
    float x4, float y4, float z4, 
    float xn, float yn, float zn): CollisionQuad</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1268</x>
      <y>488</y>
      <w>108</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>*CollisionBox*
--
+diagonalFaces: CollisionQuad[2]
--
+CollisionBox(CollisionQuad quad1, 
    CollisionQuad quad2): CollisionBox</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1404</x>
      <y>224</y>
      <w>116</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>*Player*
--
-hitBox: CollisionSphere
--
+Player(CollisionSphere hitBox): Player
-testCollisionItem(Item[]): int
-testCollisionWalls(CollisionBox[]): void
-testCollisionEnnemies(Ennemy[]): void
-attack(Ennemy[], CollisionBox[]): void
+update(Ennemy[], CollisionBox[]): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1056</x>
      <y>224</y>
      <w>168</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
+head: CollisionSphere
+torso: CollisionBox
+legs: CollsionBox[2]
+arms: CollisionBox[2]
+fakeBox: CollisionSphere
--
+Ennemy(CollisionSphere head, CollisionBox torso, 
    CollisionBox leg1, CollisionBox leg2, 
    CollisionBox arm1, CollisionBox arm2, 
    CollisionBox hitBox): Ennemy
-testCollisionWall(vector&lt;CollisionBox&gt;): void
-testCollisionTeamates(vector&lt;Ennemy&gt;): void
+update(vector&lt;CollisionBox&gt;, vector&lt;Ennemy&gt;): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1428</x>
      <y>356</y>
      <w>108</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>*Item*
--
+hitBox: CollisionSphere
--
+Item(CollisionSphere hitBox): Item</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>316</y>
      <w>12</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1220</x>
      <y>240</y>
      <w>192</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;460.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1488</x>
      <y>280</y>
      <w>12</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>220</y>
      <w>72</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>/*Character*/
--
#name:string
#health: int
--
Character(): Character
--
+getHealth(): int
+getHit(int value): void
/+attack(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>136</x>
      <y>308</y>
      <w>80</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
-isDead: bool
-damage: int
-attackDownTime: int
-timeBeforeAttack: int
--
+Ennemy(): Ennemy
+Ennemy(int, int): Ennemy
--
+getDamage(): int
+isDead(): bool
+toAttack(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>16</x>
      <y>308</y>
      <w>108</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>*Player*
--
-maxHealth: int
-stamina: int
-maxStamina: int
-score: int
-isSprinting: bool
-weapons: vector&lt;Weapon *&gt;
-knife: Melee *
-currentWeapon: unsigned int
--
+Player(...): Player
~Player(): destructor
--
+getCurrentWeapon(): int
+getMaxHealth(): int
+getStamina(): int
+getMaxStamina(): int
+sprint(): void
+stopSprint(): void
+getScore(): int
+addScore(int): void
+changeWeapon(unsigned int): void
+prevWeapon(): void
+nextWeapon(): void
+dropWeapon(): Weapon*
+getCurMag(): int
+getCurBull(): int
+use(Item&amp;): Weapon*
+secondary(): bool
+reload(): void
+update(): void
+attack(): void
+toAttack(): bool
+getWeaponDamage(): int
+isRunning(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>68</x>
      <y>272</y>
      <w>20</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>112</x>
      <y>272</y>
      <w>64</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>356</x>
      <y>288</y>
      <w>92</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>/*PowerUp*/
--
-id: int
--
+PowerUp(int): PowerUp
+PowerUp(string, int) : PowerUp
--
+use(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>248</x>
      <y>268</y>
      <w>92</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>/*Weapon*/
--
-damage: int
-isAuto: bool
-timeBeforeAttack: int
-attackDownTime: int
--
Weapon(): Weapon
Weapon(bool, int, int): Weapon
--
+getDamage(): int
+isAuto(): bool
+upgrade(int): void
+countdown(): void
/+attack(): bool/
/+stopAttack(): void/
/+getCurMag(): int
/+getCurBull(): int/
/+secondary(): bool/
/+addBullet(int): void/
/+reload(): void/
/+getRange(): float/
/+isShooting(): bool&amp;/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>212</x>
      <y>416</y>
      <w>84</w>
      <h>148</h>
    </coordinates>
    <panel_attributes>*Gun*
--
-curMagazine: int
-maxMagazine: int
-curBullets: int
-maxBullets: int
-isAiming: bool
-isReloading: bool
-precision: float
--
+Gun(...): Gun
+Gun(int, bool, int): Gun
+Gun(int, bool, int, int, int, float): Gun
--
+use(): int
+getCurMag(): int
+getCurBull(): int
+addBullet(int): void
+attack(): bool
+stopAttack(): void
+secondary(): bool
+getRange(): float
+reload(): void
+isReloading(): bool&amp;
+isAiming(): bool&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>308</x>
      <y>424</y>
      <w>84</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>*Melee*
--
-range: float
-secondaryDownTime: int
--
+Melee(...): Melee
+Melee(int, int, float, int): Melee
--
+use(): int
+getRange(): float
+attack(): bool
+secondary(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>324</x>
      <y>212</y>
      <w>64</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>/*Item*/
--
#name: string
--
+Item(): Item
~Item(): destructor
--
+giveName(): name
/+use(): int/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>368</x>
      <y>256</y>
      <w>12</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>256</y>
      <w>12</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>264</x>
      <y>400</y>
      <w>12</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>316</x>
      <y>420</y>
      <w>12</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>100</x>
      <y>196</y>
      <w>256</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>620.0;40.0;620.0;10.0;10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>260</x>
      <y>592</y>
      <w>100</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Every class in the following inherits from its counterparts in namespaces. In order to improve visibility, they won't be linked
bg=blue
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>168</y>
      <w>144</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>*Particule*
--
-position: Vector3f
-direction: Vector3f
-rotation: Vector3f
-rotationAdd: Vector3f
-visual: GLuint
-length: unsigned int
-generator: default_random_engine
-distribution: uniform_int_distribution&lt;int&gt;
--
Particule(GLuint, unsigned int, Vector3f&amp;): Particule
Particule(Particule*, Vector3f): Particule
~Particule() : destructor
--
+draw(): void
+update(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>544</x>
      <y>264</y>
      <w>20</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>168</y>
      <w>68</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>150.0;30.0;150.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1172</x>
      <y>524</y>
      <w>16</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;161.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>772</x>
      <y>552</y>
      <w>16</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>252</x>
      <y>564</y>
      <w>12</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>244</x>
      <y>580</y>
      <w>932</w>
      <h>668</h>
    </coordinates>
    <panel_attributes>FPS
--
bg=#ffffff
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>464</x>
      <y>988</y>
      <w>124</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>*glList*
--
-displayList: lotsOfCompiledGLInstructions
--
+ glCallList(gluint) : void /*calls 
    the instructions in the list*/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>732</x>
      <y>984</y>
      <w>52</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>/*Item*/
--
outerLook: glList
--
/+draw(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>584</x>
      <y>984</y>
      <w>156</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>1020</y>
      <w>104</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>/*Weapon*/
--
-frames: vector&lt;glList&gt;
-normalAnimation: unsigned int
-attackAnimation: unsigned int
-secondaryAnimation: unsigned int
-defaultPosition: Vector3f
-defaultRotation: Vector3f
-currentFrame: unsigned int
--
/+attack() : void/
/+secondary() : void/
/+reload() : void/
/+draw(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>780</x>
      <y>1152</y>
      <w>84</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>*Gun*
--
-aimPosition: Vector3f
-aimRotation: Vecto3f
--
+attack(): void
+secondary(): void
+reload(): void
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>1008</y>
      <w>56</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>816</x>
      <y>1100</y>
      <w>12</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1052</y>
      <w>92</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>*PowerUp*
--
-activationLook: vector&lt;glList&gt;
-rotation: Vector3f
--
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>748</x>
      <y>1008</y>
      <w>12</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>388</x>
      <y>1072</y>
      <w>108</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>*Level*
--
-setup: vector&lt;Obstacle&gt;
-background: vector&lt;glList&gt;
--
+draw(): void
+spawnParticules(Vector3f, int): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>1016</y>
      <w>12</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1136</y>
      <w>96</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>*Camera*
--
-location: Vector3f
-pitch: float
-yaw: float
-roll: float
-isMouseIn: bool
--
-lockCamera(): void
-moveCamera(Vector3f): void
-moveCameraUp(Vector3f): void
+control(int width, int height,
    bool isFull): void
+setLocation(Vector3f): void
+lookAt(float pitch, 
	float yaw): void
+isMouseIn(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>464</x>
      <y>1116</y>
      <w>92</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
-frames: vector&lt;glList&gt;
-walkAnimation: unsigned int
-attackAnimation: unsigned int
-deathAnimation: unsigned int
-currentFrame: unsigned int
-position: Vector3f
-rotation: Vector3f
--
+draw(): void
+setLocation(Vector3f): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>568</x>
      <y>1060</y>
      <w>92</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>*Board*
--
-window: SDL_window*
-player: Player*
-ennemies: vector&lt;Ennemy *&gt;
-itemList: vector&lt;Item *&gt;
-levels: vector&lt;Level *&gt;
-gravity: float
-currentLevel: unsigned int
--
+isFullScreen: bool
+getRefreshRate(): int
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>548</x>
      <y>1016</y>
      <w>12</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>572</x>
      <y>1164</y>
      <w>88</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>*Player*
--
-weapons: vector&lt;Weapon*&gt;
+camera: Camera
-currentWeapon: unsigned int
--
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>648</x>
      <y>1144</y>
      <w>32</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>552</x>
      <y>1128</y>
      <w>24</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>592</x>
      <y>1136</y>
      <w>12</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>628</x>
      <y>992</y>
      <w>112</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>260.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>772</x>
      <y>828</y>
      <w>224</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>*Collision*
--
-weight: float (in future updates?)
--
+static rayPlane(CollisionQuad quad, Vector3f origin,
    Vector3f direction, float *distance, Vector3f *collisionPoint): bool
-static triangleArea(Vector3f point1, Vector3f point2, Vector3f point3): float
+static sphereQuad(CollisionSphere &amp;character, collisionQuad quad): bool
+static raySphere(CollisionSphere sphere, Vector3f origin,
    Vector3f direction, float *distance, Vector3f *collisionPoint): bool
+static sphereSphere(CollisionSphere &amp;character, CollisionSphere other): bool
+static rayBox(CollisionBox box, Vector3f origin, Vector3f direction,
    float *distance, Vector3f *collisionPoint): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>696</x>
      <y>932</y>
      <w>200</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>*CollisionSphere*
--
+center: Vector3f
+radius: float
--
+CollisionSphere(Vector3f center, float radius): CollisionSphere
+CollisionSphere(float x, float y, float z, float radius): CollisionSphere</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>976</x>
      <y>932</y>
      <w>188</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*CollisionQuad*
--
+corners: Vector3f[4]
+normal: Vector3f
--
+CollisionQuad(Vector3f point1, Vector3f point2, Vector3f point3, 
    Vector3f point4, Vector3f normal): CollisionQuad
+CollisionQuad(float x1, float y1, float z1, 
    float x2, float y2, float z2, 
    float x3, float y3, float z3, 
    float x4, float y4, float z4, 
    float xn, float yn, float zn): CollisionQuad</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>980</y>
      <w>108</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>*CollisionBox*
--
+diagonalFaces: CollisionQuad[2]
--
+CollisionBox(CollisionQuad quad1, 
    CollisionQuad quad2): CollisionBox</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>836</x>
      <y>904</y>
      <w>12</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>904</x>
      <y>904</y>
      <w>12</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>988</x>
      <y>904</y>
      <w>12</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>972</x>
      <y>720</y>
      <w>116</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>*Player*
--
-hitBox: CollisionSphere
--
+Player(CollisionSphere hitBox): Player
-testCollisionItem(Item[]): int
-testCollisionWalls(Obstacle[]): void
-testCollisionEnnemies(Ennemy[]): void
-attack(Ennemy[], Obstacle[]): void
+update(Ennemy[], Obstacle[]): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>704</x>
      <y>720</y>
      <w>148</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
+head: CollisionSphere
+torso: CollisionBox
+legs: CollsionBox[2]
+arms: CollisionBox[2]
+fakeBox: CollisionSphere
--
+Ennemy(CollisionSphere head, CollisionBox torso, 
    CollisionBox leg1, CollisionBox leg2, 
    CollisionBox arm1, CollisionBox arm2, 
    CollisionBox hitBox): Ennemy
-testCollisionWall(Obstacle[]): void
-testCollisionTeamates(Ennemy[]): void
-testCollisionPlayer(Player): bool
-update(Obstacle[]): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>860</x>
      <y>784</y>
      <w>124</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>*Obstacle*
--
+hitBox: Collision
--
+Obstacle(Collision someHitBox): Obstacle</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1036</x>
      <y>852</y>
      <w>108</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>*Item*
--
+hitBox: CollisionSphere
--
+Item(CollisionSphere hitBox): Item</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>812</y>
      <w>12</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>924</x>
      <y>808</y>
      <w>12</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>848</x>
      <y>736</y>
      <w>132</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>848</x>
      <y>752</y>
      <w>132</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>848</x>
      <y>768</y>
      <w>44</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>90.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>956</x>
      <y>776</y>
      <w>24</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1056</x>
      <y>776</y>
      <w>12</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>992</x>
      <y>852</y>
      <w>52</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>312</x>
      <y>644</y>
      <w>72</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>/*Character*/
--
#name:string
#health: int
--
Character(): Character
--
+getHealth(): int
+getHit(int value): void
/+attack(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>740</y>
      <w>80</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
-isDead: bool
-damage: int
-attackDownTime: int
-timeBeforeAttack: int
--
+Ennemy(): Ennemy
+Ennemy(int, int): Ennemy
--
+getDamage(): int
+isDead(): bool
+toAttack(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>264</x>
      <y>740</y>
      <w>108</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>*Player*
--
-maxHealth: int
-stamina: int
-maxStamina: int
-score: int
-isSprinting: bool
-weapons: vector&lt;Weapon *&gt;
-knife: Melee *
-currentWeapon: unsigned int
--
+Player(...): Player
~Player(): destructor
--
+getCurrentWeapon(): int
+getMaxHealth(): int
+getStamina(): int
+getMaxStamina(): int
+sprint(): void
+stopSprint(): void
+getScore(): int
+addScore(int): void
+changeWeapon(unsigned int): void
+prevWeapon(): void
+nextWeapon(): void
+dropWeapon(): Weapon*
+getCurMag(): int
+getCurBull(): int
+use(Item&amp;): Weapon*
+secondary(): bool
+reload(): void
+update(): void
+attack(): void
+toAttack(): bool
+getWeaponDamage(): int
+isRunning(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>696</y>
      <w>32</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>364</x>
      <y>696</y>
      <w>60</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>720</y>
      <w>96</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>/*PowerUp*/
--
-id: int
--
+PowerUp(int): PowerUp
+PowerUp(string, int) : PowerUp
--
+use(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>504</x>
      <y>680</y>
      <w>88</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>/*Weapon*/
--
-damage: int
-isAuto: bool
-timeBeforeAttack: int
-attackDownTime: int
--
Weapon(): Weapon
Weapon(bool, int, int): Weapon
--
+getDamage(): int
+isAuto(): bool
+upgrade(int): void
+countdown(): void
/+attack(): bool/
/+stopAttack(): void/
/+getCurMag(): int
/+getCurBull(): int/
/+secondary(): bool/
/+addBullet(int): void/
/+reload(): void/
/+getRange(): float/
/+isShooting(): bool&amp;/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>468</x>
      <y>832</y>
      <w>84</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>*Gun*
--
-curMagazine: int
-maxMagazine: int
-curBullets: int
-maxBullets: int
-isAiming: bool
-isReloading: bool
-precision: float
--
+Gun(...): Gun
+Gun(int, bool, int): Gun
+Gun(int, bool, int, int, int, float): Gun
--
+use(): int
+getCurMag(): int
+getCurBull(): int
+addBullet(int): void
+attack(): bool
+stopAttack(): void
+secondary(): bool
+getRange(): float
+reload(): void
+isReloading(): bool&amp;
+isAiming(): bool&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>568</x>
      <y>856</y>
      <w>84</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*Melee*
--
-range: float
-secondaryDownTime: int
--
+Melee(...): Melee
+Melee(int, int, float, int): Melee
--
+use(): int
+getRange(): float
+attack(): bool
+secondary(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>612</y>
      <w>64</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>/*Item*/
--
#name: string
--
+Item(): Item
~Item(): destructor
--
+giveName(): name
/+use(): int/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>624</x>
      <y>656</y>
      <w>12</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>656</y>
      <w>12</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>816</y>
      <w>12</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>816</y>
      <w>12</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>348</x>
      <y>628</y>
      <w>240</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>580.0;10.0;10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>396</x>
      <y>1024</y>
      <w>56</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>*Particule*
--
-position: Vector3f
-visual: glList
--
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>1056</y>
      <w>12</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>416</x>
      <y>996</y>
      <w>56</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>684</x>
      <y>640</y>
      <w>108</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*Vector3f*
--
+x: float
+y: float
+z: float
--
+Vector3f(float, float, float): Vector3f
+dotProduct(Vector3f): Vector3f
+crossProduct(Vector3f): Vector3f
+length(): float
+normalize() : void
+operators(...): ...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>788</x>
      <y>320</y>
      <w>132</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>310.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>792</x>
      <y>332</y>
      <w>128</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>300.0;10.0;10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>548</x>
      <y>368</y>
      <w>128</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>*Loader*
--
-textures: map&lt;string, GLuint&gt;
-drawings: vector&lt;GLuint&gt;
-materials: map&lt;string, GLuint&gt;
-vertexes: vector&lt;Vector3f&gt;
-normals: vector&lt;Vector3f&gt;
-texVertexes: vector&lt;float*&gt;
- currentMaterial: GLuint
--
Loader(): Loader
~Loader(): destructor
--
-loadTexture(string): void
-tryHardOpenFile(string): ifstream
-readVertex(string): void
-readNormal(string): void
-readMaterialLib(string, string): void
-readKs(string, float&amp;, float&amp;, float&amp;): void
-readFloat(string, float&amp;, unsigned int): void
-readInt(string, int&amp;):void
-readMaterial(string, ifstream): void
-readTex(string): void
-readFigure(string): void
+loadFile(string): GLuint
+loadAnimation(string): vector&lt;GLuint&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>656</x>
      <y>324</y>
      <w>52</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1220</x>
      <y>256</y>
      <w>192</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>460.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1220</x>
      <y>312</y>
      <w>272</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>660.0;320.0;660.0;210.0;530.0;210.0;530.0;190.0;480.0;190.0;480.0;210.0;230.0;210.0;230.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1292</x>
      <y>400</y>
      <w>88</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>200.0;100.0;200.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1320</x>
      <y>292</y>
      <w>96</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>*Board*
--
-id: Long
_-ClassAttribute: Long_
--
Responsibilities
-- Resp1
*-- Resp2*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1292</x>
      <y>352</y>
      <w>36</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;30.0;30.0;30.0;30.0;10.0;60.0;10.0;60.0;30.0;70.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1420</x>
      <y>280</y>
      <w>12</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;400.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1516</x>
      <y>380</y>
      <w>12</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1280</x>
      <y>408</y>
      <w>12</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;200.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1108</x>
      <y>408</y>
      <w>12</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1168</x>
      <y>312</y>
      <w>152</w>
      <h>124</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;290.0;10.0;270.0;360.0;270.0;360.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1220</x>
      <y>312</y>
      <w>100</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>230.0;440.0;230.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>400</y>
      <w>12</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
</diagram>
