<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1500</x>
      <y>480</y>
      <w>310</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*glList*
--
-displayList: lotsOfCompiledGLInstructions
--
+ glCallList(gluint) : void /*calls 
    the instructions in the list*/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1300</x>
      <y>430</y>
      <w>1250</w>
      <h>800</h>
    </coordinates>
    <panel_attributes>namespace GraphicsEngine
--
bg=#f0d0d0
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>0</y>
      <w>270</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>*Vector3f*
--
+x: float
+y: float
+z: float
--
+Vector3f(float, float, float): Vector3f
+Vector3f(Vector3f) : Vector3f
+dotProduct(Vector3f): float
+crossProduct(Vector3f): Vector3f
+length(): float
+normalize() : void
+operators(...): ...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1830</x>
      <y>190</y>
      <w>30</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
layer=-1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2010</x>
      <y>460</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>/*Item*/
--
-outerLook: glList
-rotation: Vector3f
-position: Vector3f
--
/+draw(): void/
/+update(bool isHappening): bool/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1800</x>
      <y>480</y>
      <w>230</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2260</x>
      <y>570</y>
      <w>280</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>/*Weapon*/
--
-frames: vector&lt;glList&gt;
-normalAnimation: unsigned int
-attackAnimation: unsigned int
-secondaryAnimation: unsigned int
-currentFrame: unsigned int
--
/+draw(): void/
+update(bool isHappening): bool
/+attack() : void/
/+reload() : void/
/+secondary() : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2290</x>
      <y>900</y>
      <w>210</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>*Gun*
--
-aimPosition: Vector3f
-curPosition: Vector3f
-aimRotation: Vector3f
-curRotation: Vector3f
-isAiming: bool
--
+attack(): void
+secondary(): void
+reload(): void
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2240</x>
      <y>520</y>
      <w>190</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2380</x>
      <y>760</y>
      <w>30</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2000</x>
      <y>610</y>
      <w>250</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>*PowerUp*
--
-activationLook: vector&lt;glList&gt;
-currentFrame: unsigned int
--
+draw(): void
+update(bool isPickedUp): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2150</x>
      <y>570</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1310</x>
      <y>670</y>
      <w>270</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>*Level*
--
-setup: vector&lt;glList&gt;
-particules: vector&lt;Particule&gt;
--
+draw(): void
+spawnParticules(unsigned int, 
Vector3f, Vector3f, int): void
+update(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1490</x>
      <y>560</y>
      <w>30</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2020</x>
      <y>820</y>
      <w>250</w>
      <h>370</h>
    </coordinates>
    <panel_attributes>*Camera*
--
-location: Vector3f
-pitch: float
-yaw: float
-roll: float
-mouseSpeed : float
-isMouseIn: bool
-isMoving: bool
-jumpPos: vector&lt;float&gt;
-currentJump: unsigned int
--
-lockCamera(): void
-moveCamera(float, float): void
-moveCameraUp(float, float): void
-handleMoves(): void
+control(int width, int height,
    bool isFull, float speed,
    float gravity): bool
+setLocation(Vector3f): void
+lookAt(float pitch, 
	float yaw): void
+jump(): void
-doJump(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>1030</y>
      <w>230</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
-frames: vector&lt;glList&gt;
-walkAnimation: unsigned int
-attackAnimation: unsigned int
-deathAnimation: unsigned int
-currentFrame: unsigned int
--
+draw(Vector3f, Vector3f): void
+update(bool, bool): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1730</x>
      <y>580</y>
      <w>230</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>*Board*
--
-window: SDL_window*
-player: Player*
-ennemies: vector&lt;Ennemy *&gt;
-itemList: vector&lt;Item *&gt;
-itemDisplayed: vector&lt;Item*&gt;
-levels: vector&lt;Level *&gt;
-gravity: float
-currentLevel: unsigned int
--
+draw(): void
+update(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1710</x>
      <y>560</y>
      <w>30</w>
      <h>490</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;470.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1770</x>
      <y>790</y>
      <w>220</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>*Player*
--
+camera: Camera
-head: float
-speed: float
-sprintSpeed: float
--
+update(int width, int height, 
    boolfullScreen, 
    bool running,
    float gravity): bool
+draw(Weapon *): void
+attack(Weapon *): void
+secondary(Weapon *): void
+reload(Weapon *): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1980</x>
      <y>860</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1750</x>
      <y>770</y>
      <w>30</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>770</y>
      <w>30</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1880</x>
      <y>510</y>
      <w>150</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2600</x>
      <y>430</y>
      <w>1250</w>
      <h>800</h>
    </coordinates>
    <panel_attributes>namespace PhysicsEngine
--
bg=#d0f0d0
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>430</y>
      <w>1250</w>
      <h>800</h>
    </coordinates>
    <panel_attributes>namespace GameEngine
--
bg=#d0d0f0
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1970</x>
      <y>170</y>
      <w>1330</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;1310.0;280.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2790</x>
      <y>740</y>
      <w>560</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>*Collision*
--
-weight: float (in future updates?)
--
+static rayPlane(CollisionQuad quad, Vector3f origin,
    Vector3f direction, float *distance, Vector3f *collisionPoint): bool
-static triangleArea(Vector3f point1, Vector3f point2, Vector3f point3): float
+static sphereQuad(CollisionSphere &amp;character, collisionQuad quad): bool
+static raySphere(CollisionSphere sphere, Vector3f origin,
    Vector3f direction, float *distance, Vector3f *collisionPoint): bool
+static sphereSphere(CollisionSphere &amp;character, CollisionSphere other): bool
+static rayBox(CollisionBox box, Vector3f origin, Vector3f direction,
    float *distance, Vector3f *collisionPoint): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2610</x>
      <y>1000</y>
      <w>500</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>*CollisionSphere*
--
+center: Vector3f
+radius: float
--
+CollisionSphere(Vector3f center, float radius): CollisionSphere
+CollisionSphere(float x, float y, float z, float radius): CollisionSphere</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3300</x>
      <y>1000</y>
      <w>470</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>*CollisionQuad*
--
+corners: Vector3f[4]
+normal: Vector3f
--
+CollisionQuad(Vector3f point1, Vector3f point2, Vector3f point3, 
    Vector3f point4, Vector3f normal): CollisionQuad
+CollisionQuad(float x1, float y1, float z1, 
    float x2, float y2, float z2, 
    float x3, float y3, float z3, 
    float x4, float y4, float z4, 
    float xn, float yn, float zn): CollisionQuad</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3020</x>
      <y>1120</y>
      <w>270</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*CollisionBox*
--
+diagonalFaces: CollisionQuad[2]
--
+CollisionBox(CollisionQuad quad1, 
    CollisionQuad quad2): CollisionBox</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2960</x>
      <y>930</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3120</x>
      <y>930</y>
      <w>30</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3330</x>
      <y>930</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3290</x>
      <y>470</y>
      <w>290</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>*Player*
--
-hitBox: CollisionSphere
--
+Player(CollisionSphere hitBox): Player
-testCollisionItem(Item[]): int
-testCollisionWalls(Obstacle[]): void
-testCollisionEnnemies(Ennemy[]): void
-attack(Ennemy[], Obstacle[]): void
+update(Ennemy[], Obstacle[]): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2620</x>
      <y>470</y>
      <w>370</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
+head: CollisionSphere
+torso: CollisionBox
+legs: CollsionBox[2]
+arms: CollisionBox[2]
+fakeBox: CollisionSphere
--
+Ennemy(CollisionSphere head, CollisionBox torso, 
    CollisionBox leg1, CollisionBox leg2, 
    CollisionBox arm1, CollisionBox arm2, 
    CollisionBox hitBox): Ennemy
-testCollisionWall(Obstacle[]): void
-testCollisionTeamates(Ennemy[]): void
-testCollisionPlayer(Player): bool
-update(Obstacle[]): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3010</x>
      <y>630</y>
      <w>310</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>*Obstacle*
--
+hitBox: Collision
--
+Obstacle(Collision someHitBox): Obstacle</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3450</x>
      <y>800</y>
      <w>270</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>*Item*
--
+hitBox: CollisionSphere
--
+Item(CollisionSphere hitBox): Item</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2920</x>
      <y>700</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3170</x>
      <y>690</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2980</x>
      <y>510</y>
      <w>330</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2980</x>
      <y>550</y>
      <w>330</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2980</x>
      <y>590</y>
      <w>110</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>90.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3250</x>
      <y>610</y>
      <w>60</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3500</x>
      <y>610</y>
      <w>30</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3340</x>
      <y>800</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>480</y>
      <w>180</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>/*Character*/
--
-health: int
--
/+getHealth(): int/
/+getHit(int value): void/
/+attack(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>320</x>
      <y>680</y>
      <w>180</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
-isDead: bool
-damage: int
-attackDownTime: int
-timeBeforeAttack(): int
--
+Ennemy(...): Ennemy
+getDamage(): int
+isDead(): bool
+randomDrop(): Item
+getHealth(): int
+getHit(int value): void
+attack(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>680</y>
      <w>270</w>
      <h>470</h>
    </coordinates>
    <panel_attributes>*Player*
--
-maxHealth: int
-stamina: int
-maxStamina(): int
-score: int
-isSprinting: bool
-weapons: vector&lt;Weapon *&gt;
-knife: Melee *
-currentWeapon: unsigned int
--
+Player(...): Player
+getMaxHealth(): int
+getStamina(): int
+getMaxStamina(): int
+sprint(): void
+stopSprint(): void
+getScore(): int
+changeWeapon(unsigned int): void
+prevWeapon(): void
+nextWeapon(): void
+dropWeapon(): bool
+getCurMag(): int
+getCurBull(): int
+use(Item): void
+secondary(): bool
+reload(): void
+getHealth(): int
+getHit(int value): void
+attack(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>570</y>
      <w>50</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>250</x>
      <y>570</y>
      <w>170</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>900</x>
      <y>630</y>
      <w>180</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>/*PowerUp*/
--
-id: int
--
+PowerUp(...): PowerUp
+use(): int
+giveName(): name</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>580</y>
      <w>200</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>/*Weapon*/
--
-damage: int
-isAuto: bool
-timeBeforeAttack: int
-attackDownTime: int
--
/+getCurMag(): int/
/+getCurBull(): int/
/+getDamage(): int/
/+isAuto(): bool/
/+getRange(): float/
/+attack(): bool/
/+stopAttack(): void/
/+secondary(): bool/
/+addBullet(int value): void/
/+reload(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>510</x>
      <y>850</y>
      <w>210</w>
      <h>370</h>
    </coordinates>
    <panel_attributes>*Gun*
--
-curMagazine: int
-maxMagazine: int
-curBullets: int
-maxBullets: int
-isAiming: bool
-isShooting: bool
-isReloading: bool
-precision: float
--
+Gun(...): Gun
+use(): int
+giveName(): name
+getCurMag(): int
+getCurBull(): int
+getDamage(): int
+isAuto(): bool
+getRange(): float
+attack(): bool
+stopAttack(): void
+secondary(): bool
+addBullet(int value): void
+reload(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>920</y>
      <w>210</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>*Melee*
--
-range: float
-secondaryDownTime: int
-secondaryCost: int
--
+Melee(...): Melee
--
+use(): int
+giveName(): name
+getCurMag(): int
+getCurBull(): int
+getDamage(): int
+isAuto(): bool
+getRange(): float
+attack(): bool
+stopAttack(): void
+secondary(): bool
+addBullet(int value): void
+reload(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>790</x>
      <y>470</y>
      <w>160</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/*Item*/
--
-name: string
--
/+use(): int/
/+giveName(): name/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>900</x>
      <y>550</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>550</y>
      <w>30</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>830</y>
      <w>30</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>830</y>
      <w>30</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>470</y>
      <w>370</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>350.0;10.0;10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>490</y>
      <w>580</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>560.0;10.0;330.0;10.0;330.0;150.0;10.0;150.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>270</x>
      <y>650</y>
      <w>350</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>330.0;10.0;10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>630</x>
      <y>1390</y>
      <w>250</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Every class in the following inherits from its counterparts in namespaces. In order to improve visibility, they won't be linked
bg=blue
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1310</x>
      <y>510</y>
      <w>160</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>*Particule*
--
-position: Vector3f
-direction: Vector3f
-rotation: Vector3f
-visual: glList
-length: unsigned int
--
+draw(): void
+update(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1340</x>
      <y>650</y>
      <w>30</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1460</x>
      <y>510</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2920</x>
      <y>1220</y>
      <w>30</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;171.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1930</x>
      <y>1220</y>
      <w>30</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>620</x>
      <y>1220</y>
      <w>30</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>630</x>
      <y>1370</y>
      <w>2300</w>
      <h>1670</h>
    </coordinates>
    <panel_attributes>FPS
--
bg=#ffffff
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1140</x>
      <y>2370</y>
      <w>310</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*glList*
--
-displayList: lotsOfCompiledGLInstructions
--
+ glCallList(gluint) : void /*calls 
    the instructions in the list*/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1810</x>
      <y>2370</y>
      <w>130</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>/*Item*/
--
outerLook: glList
--
/+draw(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1440</x>
      <y>2370</y>
      <w>390</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1900</x>
      <y>2460</y>
      <w>260</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>/*Weapon*/
--
-frames: vector&lt;glList&gt;
-normalAnimation: unsigned int
-attackAnimation: unsigned int
-secondaryAnimation: unsigned int
-defaultPosition: Vector3f
-defaultRotation: Vector3f
-currentFrame: unsigned int
--
/+attack() : void/
/+secondary() : void/
/+reload() : void/
/+draw(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1930</x>
      <y>2790</y>
      <w>210</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>*Gun*
--
-aimPosition: Vector3f
-aimRotation: Vecto3f
--
+attack(): void
+secondary(): void
+reload(): void
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1930</x>
      <y>2430</y>
      <w>140</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2020</x>
      <y>2660</y>
      <w>30</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1660</x>
      <y>2540</y>
      <w>230</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>*PowerUp*
--
-activationLook: vector&lt;glList&gt;
-rotation: Vector3f
--
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1850</x>
      <y>2430</y>
      <w>30</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1190</x>
      <y>2490</y>
      <w>120</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>*Obstacle*
--
-texture: glList
--
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>950</x>
      <y>2590</y>
      <w>270</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>*Level*
--
-setup: vector&lt;Obstacle&gt;
-background: vector&lt;glList&gt;
--
+draw(): void
+spawnParticules(Vector3f, int): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>2450</y>
      <w>30</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1660</x>
      <y>2750</y>
      <w>240</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>*Camera*
--
-location: Vector3f
-pitch: float
-yaw: float
-roll: float
-isMouseIn: bool
--
-lockCamera(): void
-moveCamera(Vector3f): void
-moveCameraUp(Vector3f): void
+control(int width, int height,
    bool isFull): void
+setLocation(Vector3f): void
+lookAt(float pitch, 
	float yaw): void
+isMouseIn(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1140</x>
      <y>2700</y>
      <w>230</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
-frames: vector&lt;glList&gt;
-walkAnimation: unsigned int
-attackAnimation: unsigned int
-deathAnimation: unsigned int
-currentFrame: unsigned int
-position: Vector3f
-rotation: Vector3f
--
+draw(): void
+setLocation(Vector3f): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1400</x>
      <y>2560</y>
      <w>230</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>*Board*
--
-window: SDL_window*
-player: Player*
-ennemies: vector&lt;Ennemy *&gt;
-itemList: vector&lt;Item *&gt;
-levels: vector&lt;Level *&gt;
-gravity: float
-currentLevel: unsigned int
--
+isFullScreen: bool
+getRefreshRate(): int
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1350</x>
      <y>2450</y>
      <w>30</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1410</x>
      <y>2820</y>
      <w>220</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>*Player*
--
-weapons: vector&lt;Weapon*&gt;
+camera: Camera
-currentWeapon: unsigned int
--
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1600</x>
      <y>2770</y>
      <w>80</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1360</x>
      <y>2730</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1460</x>
      <y>2750</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1550</x>
      <y>2390</y>
      <w>280</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>260.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1200</x>
      <y>2550</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1910</x>
      <y>1980</y>
      <w>560</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>*Collision*
--
-weight: float (in future updates?)
--
+static rayPlane(CollisionQuad quad, Vector3f origin,
    Vector3f direction, float *distance, Vector3f *collisionPoint): bool
-static triangleArea(Vector3f point1, Vector3f point2, Vector3f point3): float
+static sphereQuad(CollisionSphere &amp;character, collisionQuad quad): bool
+static raySphere(CollisionSphere sphere, Vector3f origin,
    Vector3f direction, float *distance, Vector3f *collisionPoint): bool
+static sphereSphere(CollisionSphere &amp;character, CollisionSphere other): bool
+static rayBox(CollisionBox box, Vector3f origin, Vector3f direction,
    float *distance, Vector3f *collisionPoint): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>2240</y>
      <w>500</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>*CollisionSphere*
--
+center: Vector3f
+radius: float
--
+CollisionSphere(Vector3f center, float radius): CollisionSphere
+CollisionSphere(float x, float y, float z, float radius): CollisionSphere</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2420</x>
      <y>2240</y>
      <w>470</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>*CollisionQuad*
--
+corners: Vector3f[4]
+normal: Vector3f
--
+CollisionQuad(Vector3f point1, Vector3f point2, Vector3f point3, 
    Vector3f point4, Vector3f normal): CollisionQuad
+CollisionQuad(float x1, float y1, float z1, 
    float x2, float y2, float z2, 
    float x3, float y3, float z3, 
    float x4, float y4, float z4, 
    float xn, float yn, float zn): CollisionQuad</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2140</x>
      <y>2360</y>
      <w>270</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*CollisionBox*
--
+diagonalFaces: CollisionQuad[2]
--
+CollisionBox(CollisionQuad quad1, 
    CollisionQuad quad2): CollisionBox</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2070</x>
      <y>2170</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2240</x>
      <y>2170</y>
      <w>30</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2450</x>
      <y>2170</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2410</x>
      <y>1710</y>
      <w>290</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>*Player*
--
-hitBox: CollisionSphere
--
+Player(CollisionSphere hitBox): Player
-testCollisionItem(Item[]): int
-testCollisionWalls(Obstacle[]): void
-testCollisionEnnemies(Ennemy[]): void
-attack(Ennemy[], Obstacle[]): void
+update(Ennemy[], Obstacle[]): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1740</x>
      <y>1710</y>
      <w>370</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
+head: CollisionSphere
+torso: CollisionBox
+legs: CollsionBox[2]
+arms: CollisionBox[2]
+fakeBox: CollisionSphere
--
+Ennemy(CollisionSphere head, CollisionBox torso, 
    CollisionBox leg1, CollisionBox leg2, 
    CollisionBox arm1, CollisionBox arm2, 
    CollisionBox hitBox): Ennemy
-testCollisionWall(Obstacle[]): void
-testCollisionTeamates(Ennemy[]): void
-testCollisionPlayer(Player): bool
-update(Obstacle[]): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2130</x>
      <y>1870</y>
      <w>310</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>*Obstacle*
--
+hitBox: Collision
--
+Obstacle(Collision someHitBox): Obstacle</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2570</x>
      <y>2040</y>
      <w>270</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>*Item*
--
+hitBox: CollisionSphere
--
+Item(CollisionSphere hitBox): Item</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2040</x>
      <y>1940</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2290</x>
      <y>1930</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2100</x>
      <y>1750</y>
      <w>330</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2100</x>
      <y>1790</y>
      <w>330</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2100</x>
      <y>1830</y>
      <w>110</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>90.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2370</x>
      <y>1850</y>
      <w>60</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2620</x>
      <y>1850</y>
      <w>30</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2460</x>
      <y>2040</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>1560</y>
      <w>180</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>/*Character*/
--
-health: int
--
/+getHealth(): int/
/+getHit(int value): void/
/+attack(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>1760</y>
      <w>180</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>*Ennemy*
--
-isDead: bool
-damage: int
-attackDownTime: int
-timeBeforeAttack(): int
--
+Ennemy(...): Ennemy
+getDamage(): int
+isDead(): bool
+randomDrop(): Item
+getHealth(): int
+getHit(int value): void
+attack(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>1760</y>
      <w>270</w>
      <h>470</h>
    </coordinates>
    <panel_attributes>*Player*
--
-maxHealth: int
-stamina: int
-maxStamina(): int
-score: int
-isSprinting: bool
-weapons: vector&lt;Weapon *&gt;
-knife: Melee *
-currentWeapon: unsigned int
--
+Player(...): Player
+getMaxHealth(): int
+getStamina(): int
+getMaxStamina(): int
+sprint(): void
+stopSprint(): void
+getScore(): int
+changeWeapon(unsigned int): void
+prevWeapon(): void
+nextWeapon(): void
+dropWeapon(): bool
+getCurMag(): int
+getCurBull(): int
+use(Item): void
+secondary(): bool
+reload(): void
+getHealth(): int
+getHit(int value): void
+attack(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>790</x>
      <y>1650</y>
      <w>50</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>890</x>
      <y>1650</y>
      <w>170</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1540</x>
      <y>1710</y>
      <w>180</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>/*PowerUp*/
--
-id: int
--
+PowerUp(...): PowerUp
+use(): int
+giveName(): name</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>1660</y>
      <w>200</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>/*Weapon*/
--
-damage: int
-isAuto: bool
-timeBeforeAttack: int
-attackDownTime: int
--
/+getCurMag(): int/
/+getCurBull(): int/
/+getDamage(): int/
/+isAuto(): bool/
/+getRange(): float/
/+attack(): bool/
/+stopAttack(): void/
/+secondary(): bool/
/+addBullet(int value): void/
/+reload(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1150</x>
      <y>1930</y>
      <w>210</w>
      <h>370</h>
    </coordinates>
    <panel_attributes>*Gun*
--
-curMagazine: int
-maxMagazine: int
-curBullets: int
-maxBullets: int
-isAiming: bool
-isShooting: bool
-isReloading: bool
-precision: float
--
+Gun(...): Gun
+use(): int
+giveName(): name
+getCurMag(): int
+getCurBull(): int
+getDamage(): int
+isAuto(): bool
+getRange(): float
+attack(): bool
+stopAttack(): void
+secondary(): bool
+addBullet(int value): void
+reload(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1400</x>
      <y>2000</y>
      <w>210</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>*Melee*
--
-range: float
-secondaryDownTime: int
-secondaryCost: int
--
+Melee(...): Melee
--
+use(): int
+giveName(): name
+getCurMag(): int
+getCurBull(): int
+getDamage(): int
+isAuto(): bool
+getRange(): float
+attack(): bool
+stopAttack(): void
+secondary(): bool
+addBullet(int value): void
+reload(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1430</x>
      <y>1550</y>
      <w>160</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/*Item*/
--
-name: string
--
/+use(): int/
/+giveName(): name/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1540</x>
      <y>1630</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1420</x>
      <y>1630</y>
      <w>30</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1280</x>
      <y>1910</y>
      <w>30</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1420</x>
      <y>1910</y>
      <w>30</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1080</x>
      <y>1550</y>
      <w>370</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>350.0;10.0;10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>1570</y>
      <w>580</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>560.0;10.0;330.0;10.0;330.0;150.0;10.0;150.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>910</x>
      <y>1730</y>
      <w>350</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>330.0;10.0;10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>970</x>
      <y>2470</y>
      <w>140</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*Particule*
--
-position: Vector3f
-visual: glList
--
+draw(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>2550</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1020</x>
      <y>2400</y>
      <w>140</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1220</x>
      <y>2450</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1690</x>
      <y>1510</y>
      <w>270</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>*Vector3f*
--
+x: float
+y: float
+z: float
--
+Vector3f(float, float, float): Vector3f
+dotProduct(Vector3f): Vector3f
+crossProduct(Vector3f): Vector3f
+length(): float
+normalize() : void
+operators(...): ...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1950</x>
      <y>740</y>
      <w>330</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1960</x>
      <y>760</y>
      <w>320</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>300.0;10.0;10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1320</x>
      <y>810</y>
      <w>320</w>
      <h>340</h>
    </coordinates>
    <panel_attributes>*Loader*
--
-textures: map&lt;string, GLuint&gt;
-drawings: vector&lt;glList&gt;
-materials: map&lt;string, GLuint&gt;
-vertexes: vector&lt;Vector3f&gt;
-normals: vector&lt;Vector3f&gt;
-texVertexes: vector&lt;float*&gt;
--
-loadTexture(string): void
-tryHardOpenFile(string): ifstream
-readVertex(string): void
-readNormal(string): void
-readMaterialLib(string, string): void
-readKs(string, float&amp;, float&amp;, float&amp;): void
-readFloat(string, float&amp;, unsigned int): void
-readInt(string, int&amp;):void
-readMaterial(string, ifstream): void
-readTex(string): void
-readFigure(string): void
+loadFile(string): void
+loadAnimation(string): vector&lt;glList&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1590</x>
      <y>730</y>
      <w>160</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0;140.0;10.0</additional_attributes>
  </element>
</diagram>
